params {
   // Genetic data input
   pruned_genotypes_file = "/path/to/all.common_indendent_snps.pgen" // PGEN/BGEN file (all chromosomes combined) with LD-pruned common variants (bi-allelic SNPs only) that will be used to account for relatedness and population structure.

   gwas_genotypes_files = "/path/to/*.imputed.pgen" // PGEN or BGEN files with variants for the association testing.


   // Phenotypic data input
   phenotypes_file = "/path/to/phenotypes.tsv" // A tab-delimited file with the continuous phenotypes. Must include a header. The first two are mandatory FID and IID columns, which must match the genetic data. The FID and IID columns  must be followed by phenotypic variables - one column per phenotype.
   split_phenotypes = true // Set this to "false" if you want to model relatedness and population structure including all phenotypes at once. This may speed up the computations, but may affect the results if there are many phenotypes with substantial percent (e.g. >15%) of missing data. Default: "true" (i.e. analyze one phenotype at a time)

   // Covariates
   covariates_file = "/path/to/covariates.tsv" // A tab-delimited file with the covariates. Must include a header. The first two are mandatory FID and IID columns, which must match the genetic data. The FID and IID columns must be followed by covariate variables - one column per covariate.
   categorical_covariates = "Array" // Comma separated list of categorigal covariates (e.g. genotyping array or  genotyping/sequencing batch). The covariate names must match those in the covariates_file. Leave empty if there are no categorical covariates.


   // To test for the gene-by-sex interaction, set this variable to the sex covariate name in your covariates file.
   // This option can't be used together with the `sex_specific` option.
   gene_by_sex_interaction = ""

   // If you want to perform a female-only or male-only GWAS, set the following variable to "female" or "male," respectively.
   // This option can't be used together with the `gene_by_sex_interaction` option.
   sex_specific = ""


   // If you have already pre-computed genomic predictions, you may be able to re-use them and save compute time. For example, this may happen if you want to re-run GWASs for the same phenotypes and samples,  but with the updated version of imputed genotypes.
   // Important: (1) the genomic predictions must have been generated using the same pipeline and same options; (2) if you re-use genomic predictions, then you don't need to specify `pruned_genotypes_file`; (3) don't re-use genomic predictions if phenotypes or samples changed.
   // genomic_predictions_files = "/path/to/GWAS_results/genomic_predictions/*/*_pred.list" // Full path to the *_pred.list file(s) generated previously
   genomic_predictions_files = ""

   
   // Output options:
   output_dir = "GWAS_results" // Path to the output directory

   
   // Regenie runtime options
   regenie_container = "/path/to/regenie_v3.6.gz.sif" // Full path to the Regenie Singularity/Apptainer SIF.
   block_size = 1000 // Number of SNPs inside each block for the ridge regression. This is a default value recommended by Regenie's authors.

   
   // Parallelization
   n_ridge_regression_jobs = 5 // This parameter is used only when `split_phenotypes = false`. When in the ridge regressions you use all the phenotypes at once, you can distribute the ridge regressions betweem multiple machines for parallelization. The default is 5.
   gwas_chunk_size = 5000000 // Number of variants per chunk for parallel association tests.
}


apptainer {
   enabled = true
   autoMounts = true
}


process {
   executor = "slurm"
   clusterOptions = "--account=def-vmooser" // cluster allocation account name
   //executor = "local"
}

executor {
   $slurm {
      queueSize = 500
      queueStatInterval = "3min"
      pollInterval = "3min"
      submitRateLimit = "5 sec"
      jobName = { "Regenie" }
   }
   $local {
      cpus = 1
   }
}

